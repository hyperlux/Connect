# Default server block to catch undefined server names
server {
    listen 80 default_server;
    server_name _;
    return 444;
}

# HTTP server for both localhost and auroville.social
server {
    listen 80;
    server_name localhost auroville.social;

    # Serve static files
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Cache control for index.html
        add_header Cache-Control "no-store, no-cache, must-revalidate";
        expires 0;
    }

    # Handle CSS files with proper caching for hashed files
    location /assets/ {
        root /usr/share/nginx/html;
        try_files $uri =404;
        
        # Cache hashed assets (containing a dot followed by alphanumeric characters before the extension)
        location ~ \.[a-zA-Z0-9]+\.(css|js)$ {
            add_header Cache-Control "public, max-age=31536000, immutable";
            expires max;
            add_header X-Content-Type-Options nosniff;
        }
        
        # No cache for non-hashed assets
        location ~ \.(css|js)$ {
            add_header Cache-Control "no-store, no-cache, must-revalidate";
            expires 0;
            add_header X-Content-Type-Options nosniff;
        }
    }

    # Handle JavaScript modules
    location ~* \.m?js$ {
        root /usr/share/nginx/html;
        types { application/javascript js mjs; }
        add_header X-Content-Type-Options nosniff;
    }

    # Handle manifest file
    location = /manifest.webmanifest {
        root /usr/share/nginx/html;
        types { application/manifest+json webmanifest; }
        add_header X-Content-Type-Options nosniff;
    }

    # Service worker with correct MIME type
    location = /service-worker.js {
        alias /usr/share/nginx/html/service-worker.js;
        types { application/javascript js; }
        add_header Cache-Control "no-cache";
        add_header Service-Worker-Allowed "/";
        access_log off;
        expires off;
    }

    # Handle workbox files
    location ~ ^/workbox-.+\.js$ {
        root /usr/share/nginx/html;
        types { application/javascript js; }
        add_header Cache-Control "public, max-age=31536000";
        try_files $uri =404;
    }

    # Proxy API requests
    location /api/ {
        proxy_pass http://app:5000/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://app:5000/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Serve images from auroimgs directory
    location /auroimgs/ {
        root /usr/share/nginx/html;
        expires 30d;
        add_header Cache-Control "public, no-transform";
        try_files $uri $uri/ =404;
    }
}

# HTTPS server for auroville.social
server {
    listen 443 ssl http2;
    server_name auroville.social;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/auroville.social/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/auroville.social/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/auroville.social/chain.pem;

    # SSL configuration
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Modern configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS
    add_header Strict-Transport-Security "max-age=63072000" always;

    # Same configuration as HTTP server
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Cache control for index.html
        add_header Cache-Control "no-store, no-cache, must-revalidate";
        expires 0;
    }

    # Handle CSS files with proper caching for hashed files
    location /assets/ {
        root /usr/share/nginx/html;
        try_files $uri =404;
        
        # Cache hashed assets (containing a dot followed by alphanumeric characters before the extension)
        location ~ \.[a-zA-Z0-9]+\.(css|js)$ {
            add_header Cache-Control "public, max-age=31536000, immutable";
            expires max;
            add_header X-Content-Type-Options nosniff;
        }
        
        # No cache for non-hashed assets
        location ~ \.(css|js)$ {
            add_header Cache-Control "no-store, no-cache, must-revalidate";
            expires 0;
            add_header X-Content-Type-Options nosniff;
        }
    }

    # Handle JavaScript modules
    location ~* \.m?js$ {
        root /usr/share/nginx/html;
        types { application/javascript js mjs; }
        add_header X-Content-Type-Options nosniff;
    }

    # Handle manifest file
    location = /manifest.webmanifest {
        root /usr/share/nginx/html;
        types { application/manifest+json webmanifest; }
        add_header X-Content-Type-Options nosniff;
    }

    # Service worker with correct MIME type
    location = /service-worker.js {
        alias /usr/share/nginx/html/service-worker.js;
        types { application/javascript js; }
        add_header Cache-Control "no-cache";
        add_header Service-Worker-Allowed "/";
        access_log off;
        expires off;
    }

    # Handle workbox files
    location ~ ^/workbox-.+\.js$ {
        root /usr/share/nginx/html;
        types { application/javascript js; }
        add_header Cache-Control "public, max-age=31536000";
        try_files $uri =404;
    }

    # Proxy API requests
    location /api/ {
        proxy_pass http://app:5000/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://app:5000/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Serve images from auroimgs directory
    location /auroimgs/ {
        root /usr/share/nginx/html;
        expires 30d;
        add_header Cache-Control "public, no-transform";
        try_files $uri $uri/ =404;
    }
}
