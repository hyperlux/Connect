version: '3.8'

services:
  db:
    image: postgres:16
    container_name: auroville_db
    environment:
      POSTGRES_USER: auroville_user
      POSTGRES_PASSWORD: ok
      POSTGRES_DB: auroville_connect
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - auroville_network
    command: postgres -c shared_buffers=256MB -c work_mem=16MB -c maintenance_work_mem=128MB -c max_connections=50
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auroville_user -d auroville_connect"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: app
    container_name: auroville_app
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://auroville_user:ok@db:5432/auroville_connect
      - NODE_ENV=production
      - NODE_OPTIONS=--max-old-space-size=512
      - JWT_SECRET=ea21a8d798aa16aacce7fbcff1cde5dfbe50a294d5c7d14aee0ee4f6a6d2a5a7a
      - SMTP_SERVER=smtp.ionos.com
      - SMTP_PORT=587
      - SMTP_USERNAME=notifications@aurovillenetwork.us
      - SMTP_PASSWORD=lucky8magic7aurOville*Q
      - SMTP_AUTH=plain
    volumes:
      - ./logs:/app/server/logs
    networks:
      - auroville_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (res) => { if (res.statusCode !== 200) process.exit(1) }).on('error', () => process.exit(1))"]
      interval: 10s
      timeout: 1s
      retries: 5
      start_period: 10s

  nginx:
    build:
      context: .
      dockerfile: Dockerfile
      target: nginx
    container_name: auroville_nginx
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx.conf/nginx.docker.conf:/etc/nginx/conf.d/auroville.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/lib/letsencrypt:/var/lib/letsencrypt
    networks:
      - auroville_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          memory: 256M

volumes:
  postgres_data:

networks:
  auroville_network:
    driver: bridge
